@model GetWiki.Models.Category

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Category</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control", @id="categoryName" } })
                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
                <span class="text-danger" id="warningMsg"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" id="submitCategoryBtn" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<!-- jQuery -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>

<!--Validates the input on client side. -->
<script>
    $("#submitCategoryBtn").on('click', function (e) {
        var categoryName = $("#categoryName").val();
        validationExpression = /^[A-öa-ö0-9 -'.,%#@@!?"]+$/;

        if (!validationExpression.test(categoryName)) {
            //Prevent submit if the categoryName does not pass the validation.
            e.preventDefault();
            $("#warningMsg").text("A category can not start/end with a blank space.");
        }
    })
</script>